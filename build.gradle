plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

javafx {
    version = "20.0.1"
    modules = [ 'javafx.controls' , 'javafx.fxml', 'javafx.graphics']
}

mainClassName = "org.alibaby.Controller.Main"

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('net.synedra:validatorfx:0.4.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

    implementation('com.github.almasb:fxgl:17.2') {
        exclude(group: 'org.openjfx')
    }
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'com.google.firebase:firebase-admin:9.1.1'
 //   implementation fileTree(dir:'libs/javafx-sdk-20.0.1/lib', include: ['*.jar'])
    implementation 'org.openjfx:javafx-controls:20.0.1'
    implementation 'org.openjfx:javafx-fxml:20.0.1'
    implementation 'org.openjfx:javafx-graphics:20.0.1'
    implementation 'org.mindrot:jbcrypt:0.4'

}


tasks.withType(JavaExec) {
    classpath = sourceSets.main.runtimeClasspath    
    mainClassName = "org.alibaby.Controller.Main"
    jvmArgs = ['--module-path', classpath.asPath, '--add-modules', 'javafx.controls,javafx.fxml,javafx.graphics']
}

test {
    useJUnitPlatform()
}

task runController(type: JavaExec) {
    main = 'org.alibaby.Controller.FriendsUtil'
}

task runPlay(type: JavaExec) {
    main = 'org.alibaby.Controller.Main'
}

task runModel(type: JavaExec) {
    main = 'org.alibaby.Model.User'
}

task runView(type: JavaExec) {
    main = 'org.alibaby.View.MultilineLabel'
}